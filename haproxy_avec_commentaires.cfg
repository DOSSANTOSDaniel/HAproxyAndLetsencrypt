global
        description Bienvenue sur la page de statistiques
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
# Chroot ajoute un niveau de sécurité en isolant le répertoire des données de HAproxy.
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
# Stats socket permet l'interaction avec d'autres outils
# Comme par exemple HATOP c'est comme une API.
# C'est la création d'un socket de stats avec les droits admin.
        stats timeout 30s
# Si le socket ne répond pas au bout de 30s alors il est considr comme HS.
        user haproxy
        group haproxy
# User et groupe avec lequel HAProxy est lanc.
        maxconn 2048
# Nombre de connexions Max que va accepter HAProxy.
        daemon
# Indique le fonctionnement en tâche de fond de HAproxy.

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA
ssl-default-bind-options no-sslv3 no-tls-tickets #disable SSLv3
        tune.ssl.default-dh-param 2048 #tune DH to 2048
        
defaults
        log     global
        mode    http
# mode http : travail par défaut sur la couche 7 du model OSI (sur les requêtes http).
        option  httplog
# Log les requêtes HTTP
        option  dontlognull
# Ne log pas les requêtes avec des résultats nuls.
        option  redispatch
# Cette option est utilisée lorsqu'il y a de la persistance de sessions (sticky table),
# HAProxy renvoie vers un nouveau backend lorsque le serveur de backend initiale devient indisponible.
        option  forwardfor
# forwardfor permet au serveur final de connaître l'adresse ip du client.
        option  http-server-close
# Termine la session quand le client quitte la page.
        retries 3
# Nombre de connexion par serveur backend avant abandon de la connexion.
        timeout connect 5000  # (sens aller) connexion de HA vers le serveur cible, pas de réponse au bout de (n)min = HS
        timeout client  50000 # (sens aller) connexion du client vers le HA, pas de rponce au bout de (n)min = HS
        timeout server  50000 # (sens retour) du serveur cible vers HA, pas de rponce au bout de (n)min = HS
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

listen stats
        description Section Statistiques
        bind *:9999 ssl crt /etc/letsencrypt/live/tpdaniel.fr/tpdaniel.pem
        stats enable
        stats uri /status
# La page de statistiques sera accessible par le port 9999 et le chemin /status.
        stats refresh 7s
# Rafraîchissement de la page tous les 7 secondes.
        stats auth daniel:digital
# Authentification de la page web de management.
        stats hide-version
# Cache la version de HAproxy.
        stats show-desc
# Affiche les descriptions sur la page de monitoring tpdaniel.fr:9999/status (exemple: description Section Statistiques)
        stats show-legends
# show-legends : affiche un pop up au passage de la souris.
#        stats admin if TRUE
# admin if TRUE : active le management des serveurs directement  partir de la page de statistique.

frontend front_http
        description Frontend HTTP
        bind *:80
        redirect scheme https code 301 if !{ ssl_fc }
# La variable ssl_fc retourne true si HTTPS et fauls si HTTP.

frontend front_https
        description Frontend HTTPS
        bind *:443 ssl crt /etc/letsencrypt/live/tpdaniel.fr/tpdaniel.pem

        use_backend back_pve if { ssl_fc_sni pve.tpdaniel.fr }
        use_backend back_doku if { ssl_fc_sni doku.tpdaniel.fr }
        use_backend back_next if { ssl_fc_sni next.tpdaniel.fr }
        use_backend back_coc if { ssl_fc_sni coc.tpdaniel.fr }
        use_backend back_port if { ssl_fc_sni port.tpdaniel.fr }
# ssl_fc_sni : extracte le Server Name Indication TLS extension (SNI) de la requête,
# pour vérifier que c'est bien une connexion en TLS.

        default_backend back_doku
# Si tpdaniel.fr basculement vers back_doku.

backend back_doku
        description Serveur Dokuwiki
        http-request redirect location https://doku.%[hdr(host)]%[capture.req.uri] unless { hdr_beg(host) -i doku }
# Si tpdaniel.fr alors transformation en doku.tpdaniel.fr.
        server doku 192.168.0.63:80 check
        option httpchk GET /doku.php
        http-check expect status 200
# Si requette GET vers le fichiers doku.php sur doku.tpdaniel.fr = 200 alors ok, si non serveur HS.

backend back_next
        description Serveur Nextcloud
        server next 192.168.0.41:443 check ssl verify none
# check ssl verify none : vérifie que la connexion entre HA et le serveur cible est en https et quelle est active.
        option httpchk GET /robots.txt
        http-check expect status 200

backend back_coc
        description Serveur Cockpit pour Docker
        server coc 192.168.0.22:9090 check ssl verify none  

backend back_port
        description Serveur Portainer
        mode http
        server port 192.168.0.21:9000 check  

backend back_pve
        description Serveur Proxmox PVE1,2 et 3
        balance roundrobin
        server pve 192.168.0.23:8006 weight 1 maxconn 5 check ssl verify none
        server pve 192.168.0.22:8006 weight 1 maxconn 5 check ssl verify none
        server pve 192.168.0.21:8006 weight 1 maxconn 5 check ssl verify none
# weight : permet la pondération manuelle c'est la fréquences d'utilisation:
# 1 = 1 fois sur 3.
# 2 = 2 fois sur 3.
# 3 = 3 fois sur 3.
# 0 = serveur désactivé.
# maxconn : maximum de connexions au delà cela bascule sur un autre noeud(effet de débordement).

# Activation de la sticky Table
# Le problème est que novnc établit parfois une connexion sur un autre noeud que celui auquel on est actuellement connect.
# Par conséquent si on ouvre un shell sur une vm ou un conteneur cela risque de ne pas fonctionner.
# Connection failed (Error 500: Timeout while waiting for port '5900' to get ready!)
# La sticky table permet donc de maintenir la sessions sur le mme noeud.
        stick-table type ip size 1m expire 30m
        stick match src
        stick store-request src
# ip : Basé sur l'ip.
# size 1m : Taille de la sticky table.
# expire 30 m : La session expire au bout de 30 minutes.
# match src : Vérification si la session est dj dans la sticky table.
# store-request src : Stock la session si elle n'est pas dans la sticky table.
